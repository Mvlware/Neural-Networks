noiseRange = 0:.05:.5; 
maxTest = 100; 
network1 = []; 
network2 = []; 
T = targets; 
 
% ÷икл тестировани€:
for noiselevel = noiseRange 
    errors1 = 0; % инициализаци€ переменной количества ошибок дл€ теста сети 1
    errors2 = 0; % инициализаци€ переменной количества ошибок дл€ теста сети 2
    for i = 1 : maxTest 
        P = alphabet + randn(10800,4) * noiselevel; % вз€тие изображени€ из алфавита с произвольной дисперсией шума 
        % “ест дл€ сети 1:
        A = sim(net,P); % исходное изображение с помехами присваиваетс€ в переменную ј, sim
        AA = compet(A); % определение соответствующего изображени€ присваиваетс€ в переменную јј 
        % с помощью конкурирующей функции активации, котора€ принимает один входной аргумент и
        % присваивает 1 единственному элементу вектора выхода, а всем остальным - значение 0
        errors1 = errors1 + sum(sum(abs(AA-T)))/2; % количество ошибок        
        % “ест дл€ сети 2:
        An = sim(netn,P); 
        AAn = compet(An); 
        errors2 = errors2 + sum(sum(abs(AAn-T)))/2;  
     echo off % отключение режима вывода команд на экран
    end
    % Cредние значени€ ошибок (100 последовательностей из 4 векторов целей): 
    network1 = [network1 errors1/4/100]; 
    network2 = [network2 errors2/4/100];
end
    % функции графического отображени€:
    newplot;
    plot(noiseRange,network1*100,'-',noiseRange,network2*100)
